// <auto-generated />
using System;
using ERP.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ERP.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250617175510_added_12Tables")]
    partial class added_12Tables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ERP.Core.Entities.AvailableStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MaKho")
                        .HasColumnType("int");

                    b.Property<int>("MaSP")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime");

                    b.Property<int>("SoLuongTon")
                        .HasColumnType("int");

                    b.Property<string>("TenSP")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("MaKho");

                    b.HasIndex("MaSP");

                    b.ToTable("TONKHO", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.Customer", b =>
                {
                    b.Property<int>("MaKH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKH"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("TenKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TichDiem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("MaKH");

                    b.ToTable("KHACHHANG", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.Inventory", b =>
                {
                    b.Property<int>("MaKho")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKho"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NguoiQuanLy")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenKho")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaKho");

                    b.ToTable("KHOHANG", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.Product", b =>
                {
                    b.Property<int>("MaSP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaSP"));

                    b.Property<long>("DonGia")
                        .HasColumnType("bigint");

                    b.Property<int>("MaMatHang")
                        .HasColumnType("int");

                    b.Property<int>("MaNCC")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("NgayNhap")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuongTon")
                        .HasColumnType("int");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("MaSP");

                    b.HasIndex("MaMatHang");

                    b.HasIndex("MaNCC");

                    b.ToTable("SANPHAM", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.ProductCategory", b =>
                {
                    b.Property<int>("MaMatHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaMatHang"));

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenMatHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("TongChiPhi")
                        .HasColumnType("bigint");

                    b.HasKey("MaMatHang");

                    b.ToTable("PHANLOAIMATHANG", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.ProviderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MaNCC")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NguoiTiepNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TenNCC")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("MaNCC")
                        .IsUnique();

                    b.ToTable("NhaCungCap", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.Receipt", b =>
                {
                    b.Property<int>("MaHD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHD"));

                    b.Property<string>("LoaiHD")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MaKH")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime");

                    b.Property<string>("NguoiLap")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("TongTien")
                        .HasColumnType("bigint");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MaHD");

                    b.HasIndex("MaKH");

                    b.ToTable("HOADON", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.ReceiptDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("ChietKhau")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0f);

                    b.Property<long>("DonGia")
                        .HasColumnType("bigint");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("MaHD")
                        .HasColumnType("int");

                    b.Property<int>("MaSP")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<float>("VAT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0.1f);

                    b.HasKey("Id");

                    b.HasIndex("MaHD");

                    b.HasIndex("MaSP");

                    b.ToTable("CHITIETHOADON", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.StockIn", b =>
                {
                    b.Property<int>("MaPhieuNhap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhieuNhap"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("MaKho")
                        .HasColumnType("int");

                    b.Property<int>("MaNCC")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayNhap")
                        .HasColumnType("date");

                    b.HasKey("MaPhieuNhap");

                    b.HasIndex("MaKho");

                    b.HasIndex("MaNCC");

                    b.ToTable("NHAPKHO", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.StockInDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("DonGia")
                        .HasColumnType("bigint");

                    b.Property<int>("MaPhieuNhap")
                        .HasColumnType("int");

                    b.Property<int>("MaSP")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongNhap")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaPhieuNhap");

                    b.HasIndex("MaSP");

                    b.ToTable("CHITIETNHAPKHO", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.StockOut", b =>
                {
                    b.Property<int>("MaPhieuXuat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhieuXuat"));

                    b.Property<string>("LyDoXuat")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("MaKho")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayXuat")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiXuat")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaPhieuXuat");

                    b.HasIndex("MaKho");

                    b.ToTable("XUATKHO", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.StockOutDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("MaPhieuXuat")
                        .HasColumnType("int");

                    b.Property<int>("MaSP")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongXuat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaPhieuXuat");

                    b.HasIndex("MaSP");

                    b.ToTable("CHITIETXUATKHO", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.AvailableStock", b =>
                {
                    b.HasOne("ERP.Core.Entities.Inventory", "Inventory")
                        .WithMany("AvailableStocks")
                        .HasForeignKey("MaKho")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Core.Entities.Product", "Product")
                        .WithMany("AvailableStocks")
                        .HasForeignKey("MaSP")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ERP.Core.Entities.Product", b =>
                {
                    b.HasOne("ERP.Core.Entities.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("MaMatHang")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Core.Entities.ProviderEntity", "Provider")
                        .WithMany("Products")
                        .HasForeignKey("MaNCC")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductCategory");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("ERP.Core.Entities.Receipt", b =>
                {
                    b.HasOne("ERP.Core.Entities.Customer", "Customer")
                        .WithMany("Receipts")
                        .HasForeignKey("MaKH")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ERP.Core.Entities.ReceiptDetail", b =>
                {
                    b.HasOne("ERP.Core.Entities.Receipt", "Receipt")
                        .WithMany("ReceiptDetails")
                        .HasForeignKey("MaHD")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Core.Entities.Product", "Product")
                        .WithMany("ReceiptDetails")
                        .HasForeignKey("MaSP")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Receipt");
                });

            modelBuilder.Entity("ERP.Core.Entities.StockIn", b =>
                {
                    b.HasOne("ERP.Core.Entities.Inventory", "Inventory")
                        .WithMany("StockIns")
                        .HasForeignKey("MaKho")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Core.Entities.ProviderEntity", "Provider")
                        .WithMany("StockIns")
                        .HasForeignKey("MaNCC")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("ERP.Core.Entities.StockInDetail", b =>
                {
                    b.HasOne("ERP.Core.Entities.StockIn", "StockIn")
                        .WithMany("StockInDetails")
                        .HasForeignKey("MaPhieuNhap")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Core.Entities.Product", "Product")
                        .WithMany("StockInDetails")
                        .HasForeignKey("MaSP")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("StockIn");
                });

            modelBuilder.Entity("ERP.Core.Entities.StockOut", b =>
                {
                    b.HasOne("ERP.Core.Entities.Inventory", "Inventory")
                        .WithMany("StockOuts")
                        .HasForeignKey("MaKho")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("ERP.Core.Entities.StockOutDetail", b =>
                {
                    b.HasOne("ERP.Core.Entities.StockOut", "StockOut")
                        .WithMany("StockOutDetails")
                        .HasForeignKey("MaPhieuXuat")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Core.Entities.Product", "Product")
                        .WithMany("StockOutDetails")
                        .HasForeignKey("MaSP")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("StockOut");
                });

            modelBuilder.Entity("ERP.Core.Entities.Customer", b =>
                {
                    b.Navigation("Receipts");
                });

            modelBuilder.Entity("ERP.Core.Entities.Inventory", b =>
                {
                    b.Navigation("AvailableStocks");

                    b.Navigation("StockIns");

                    b.Navigation("StockOuts");
                });

            modelBuilder.Entity("ERP.Core.Entities.Product", b =>
                {
                    b.Navigation("AvailableStocks");

                    b.Navigation("ReceiptDetails");

                    b.Navigation("StockInDetails");

                    b.Navigation("StockOutDetails");
                });

            modelBuilder.Entity("ERP.Core.Entities.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ERP.Core.Entities.ProviderEntity", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("StockIns");
                });

            modelBuilder.Entity("ERP.Core.Entities.Receipt", b =>
                {
                    b.Navigation("ReceiptDetails");
                });

            modelBuilder.Entity("ERP.Core.Entities.StockIn", b =>
                {
                    b.Navigation("StockInDetails");
                });

            modelBuilder.Entity("ERP.Core.Entities.StockOut", b =>
                {
                    b.Navigation("StockOutDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
